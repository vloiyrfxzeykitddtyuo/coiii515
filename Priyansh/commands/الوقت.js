module.exports.config = {
    name: "╪н┘Е╪з┘К╪й",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "╪з╪н┘Е╪п ╪╣╪м┘К┘Ж╪й",
    description: "┘Е╪▒╪з┘В╪и╪й ╪к╪║┘К┘К╪▒ ╪з┘Д╪г╪│┘Е╪з╪б ┘И╪з┘Д┘Г┘Д┘Е╪з╪к ╪з┘Д╪│┘К╪ж╪й",
    commandCategory: "┘Е╪╣┘Д┘И┘Е╪з╪к",
    usages: "╪н┘Е╪з┘К╪й",
    cooldowns: 5
};

const badWords = ["┘Г┘Д┘Е╪й1", "┘Г┘Д┘Е╪й2", "┘Г┘Д┘Е╪й3"]; // ╪г╪╢┘Б ╪з┘Д┘Г┘Д┘Е╪з╪к ╪з┘Д╪│┘К╪ж╪й ┘З┘Ж╪з

module.exports.run = async ({ api, event }) => {
    // ╪п╪з┘Д╪й ┘Д┘Д╪к╪н┘В┘В ┘Е┘Ж ╪з┘Д┘Г┘Д┘Е╪з╪к ╪з┘Д╪│┘К╪ж╪й
    function containsBadWords(message) {
        return badWords.some(word => message.includes(word));
    }

    // ┘Е╪▒╪з┘В╪и╪й ╪к╪║┘К┘К╪▒ ╪з┘Д╪з╪│┘Е
    api.getThreadInfo(event.threadID, (err, threadInfo) => {
        if (err) return console.error(err);

        const members = threadInfo.participantIDs;

        // ╪к╪н┘В┘В ┘Е┘Ж ╪з┘Д╪г╪╣╪╢╪з╪б ┘Б┘К ╪з┘Д┘Е╪м┘Е┘И╪╣╪й
        members.forEach(memberID => {
            api.getUserInfo(memberID, (err, userInfo) => {
                if (err) return console.error(err);

                const userName = userInfo[memberID].name;

                // ╪к╪н┘В┘В ┘Е┘Ж ╪к╪║┘К┘К╪▒ ╪з┘Д╪з╪│┘Е
                if (event.logMessageType === "log:subscribe" && event.logMessageData && event.logMessageData["name"] !== userName) {
                    const message = `тЪая╕П ╪к┘Е ╪к╪║┘К┘К╪▒ ╪з╪│┘Е ╪г╪н╪п ╪з┘Д╪г╪╣╪╢╪з╪б: ${userName} ╪е┘Д┘Й ${event.logMessageData.name}`;
                    return api.sendMessage(message, event.threadID);
                }
            });
        });
    });

    // ╪к╪н┘В┘В ┘Е┘Ж ┘И╪м┘И╪п ┘Г┘Д┘Е╪з╪к ╪│┘К╪ж╪й ┘Б┘К ╪з┘Д╪▒╪│╪з┘Д╪й
    if (containsBadWords(event.body)) {
        return api.sendMessage("ЁЯЪл ╪к╪н╪к┘И┘К ╪▒╪│╪з┘Д╪к┘Г ╪╣┘Д┘Й ┘Г┘Д┘Е╪з╪к ╪║┘К╪▒ ┘Д╪з╪ж┘В╪й.", event.threadID);
    }
};
